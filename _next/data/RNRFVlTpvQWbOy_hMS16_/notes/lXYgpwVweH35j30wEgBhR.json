{"pageProps":{"note":{"id":"lXYgpwVweH35j30wEgBhR","title":"Pandas","desc":"","updated":1662975301069,"created":1609770454495,"custom":{},"fname":"tools.code.python.pandas","type":"note","vault":{"fsPath":"vault"},"contentHash":"aadf1031dcd78b8addc91f5ba821cc4e","links":[],"anchors":{"subset-a-df-according-to-string-present-in-columns-name":{"type":"header","text":"Subset a df according to string present in columns name","value":"subset-a-df-according-to-string-present-in-columns-name","line":8,"column":0,"depth":2},"select-a-df-according-to-column-positions":{"type":"header","text":"Select a df according to column positions","value":"select-a-df-according-to-column-positions","line":17,"column":0,"depth":2},"rename-columns":{"type":"header","text":"Rename columns","value":"rename-columns","line":26,"column":0,"depth":2},"rename-columns-or-index":{"type":"header","text":"Rename columns or index","value":"rename-columns-or-index","line":33,"column":0,"depth":2},"rename-columns-by-position":{"type":"header","text":"Rename columns by position","value":"rename-columns-by-position","line":43,"column":0,"depth":2},"add-prefix-or-suffix-to-colnames":{"type":"header","text":"Add prefix (or suffix) to colnames","value":"add-prefix-or-suffix-to-colnames","line":49,"column":0,"depth":2},"check-df-datatype":{"type":"header","text":"Check df datatype","value":"check-df-datatype","line":55,"column":0,"depth":2},"convert-to-a-specific-type":{"type":"header","text":"Convert to a specific type","value":"convert-to-a-specific-type","line":61,"column":0,"depth":2},"from-continuous-to-categorical":{"type":"header","text":"From continuous to categorical","value":"from-continuous-to-categorical","line":67,"column":0,"depth":1},"merge-two-df-based-on-index":{"type":"header","text":"Merge two df based on index","value":"merge-two-df-based-on-index","line":74,"column":0,"depth":1},"merge-two-df-based-on-columns":{"type":"header","text":"Merge two df based on columns","value":"merge-two-df-based-on-columns","line":80,"column":0,"depth":1},"replace-specific-string-in-values":{"type":"header","text":"replace specific string in values","value":"replace-specific-string-in-values","line":87,"column":0,"depth":1},"replace-string-by-nan":{"type":"header","text":"Replace string by Nan","value":"replace-string-by-nan","line":93,"column":0,"depth":1},"here-we-observe-full-nana-rows-and-full-nan-columns-in-the-latest-df-we-drop-them":{"type":"header","text":"Here we observe full NANA rows and full NAN columns in the latest df. We drop them","value":"here-we-observe-full-nana-rows-and-full-nan-columns-in-the-latest-df-we-drop-them","line":97,"column":0,"depth":1},"display-all-infos-of-a-df":{"type":"header","text":"display all infos of a df","value":"display-all-infos-of-a-df","line":102,"column":0,"depth":1},"drop-column-according-to-regex":{"type":"header","text":"drop column according to regex","value":"drop-column-according-to-regex","line":110,"column":0,"depth":1},"drop-columns-according-to-list":{"type":"header","text":"drop columns according to list","value":"drop-columns-according-to-list","line":116,"column":0,"depth":1},"if-na-replace-with-value-of-the-same-row-but-another-column":{"type":"header","text":"If Na replace with value of the same row but another column","value":"if-na-replace-with-value-of-the-same-row-but-another-column","line":131,"column":0,"depth":1},"extract-digits-from-a-string":{"type":"header","text":"Extract digits from a string","value":"extract-digits-from-a-string","line":142,"column":0,"depth":1},"create-multiples-columns-values-conditionally-using-npwhere":{"type":"header","text":"Create multiples columns values conditionally using np.where","value":"create-multiples-columns-values-conditionally-using-npwhere","line":151,"column":0,"depth":1},"drop-duplicates-according-to-multiple-coloumns":{"type":"header","text":"drop duplicates according to multiple coloumns","value":"drop-duplicates-according-to-multiple-coloumns","line":165,"column":0,"depth":1},"append-df-created-in-a-for-loop":{"type":"header","text":"append df created in a for loop","value":"append-df-created-in-a-for-loop","line":172,"column":0,"depth":1},"see-pdconcat-documentation-for-more-info":{"type":"header","text":"see pd.concat documentation for more info","value":"see-pdconcat-documentation-for-more-info","line":181,"column":0,"depth":1},"write-dataframe-to-an-excel-sheet":{"type":"header","text":"write DataFrame to an excel sheet","value":"write-dataframe-to-an-excel-sheet","line":183,"column":0,"depth":1}},"children":[],"parent":"WUAQTdKgGopyN4MDTAjBd","data":{}},"body":"<h1 id=\"pandas\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#pandas\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Pandas</h1>\n<h2 id=\"subset-a-df-according-to-string-present-in-columns-name\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#subset-a-df-according-to-string-present-in-columns-name\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Subset a df according to string present in columns name</h2>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'alp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>contains<span class=\"token punctuation\">(</span><span class=\"token string\">'alp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"select-a-df-according-to-column-positions\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#select-a-df-according-to-column-positions\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Select a df according to column positions</h2>\n<p>Here from column seven till the end </p>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"rename-columns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#rename-columns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Rename columns</h2>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'oldName1'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'newName1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'oldName2'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'newName2'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"rename-columns-or-index\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#rename-columns-or-index\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Rename columns or index</h2>\n<pre class=\"language-python\"><code class=\"language-python\">df_new <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Col_1'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'ONE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Row_1'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<p>Didnt work for me</p>\n<p>df_merged_selected.index.rename('Row ID', inplace = True)\ndoes</p>\n<h2 id=\"rename-columns-by-position\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#rename-columns-by-position\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Rename columns by position</h2>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"your value\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> inplace <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"add-prefix-or-suffix-to-colnames\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#add-prefix-or-suffix-to-colnames\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Add prefix (or suffix) to colnames</h2>\n<p>DataFrame.add_prefix(prefix)</p>\n<h2 id=\"check-df-datatype\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#check-df-datatype\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Check df datatype</h2>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>dtypes\n</code></pre>\n<h2 id=\"convert-to-a-specific-type\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#convert-to-a-specific-type\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Convert to a specific type</h2>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"from-continuous-to-categorical\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#from-continuous-to-categorical\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>From continuous to categorical</h1>\n<pre class=\"language-python\"><code class=\"language-python\">pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>Age<span class=\"token punctuation\">,</span>bins<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">65</span><span class=\"token punctuation\">,</span><span class=\"token number\">99</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Toddler/Baby'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Child'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Adult'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Elderly'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"merge-two-df-based-on-index\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#merge-two-df-based-on-index\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Merge two df based on index</h1>\n<pre class=\"language-python\"><code class=\"language-python\">pd<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">,</span> df2<span class=\"token punctuation\">,</span> left_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> right_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"merge-two-df-based-on-columns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#merge-two-df-based-on-columns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Merge two df based on columns</h1>\n<p>pd.merge(student_df, staff_df, how='left', left_on='Name', right_on='Name')</p>\n<h1 id=\"replace-specific-string-in-values\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#replace-specific-string-in-values\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>replace specific string in values</h1>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">[</span><span class=\"token string\">'Column2'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>Column2<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'b,?'</span> <span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"replace-string-by-nan\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#replace-string-by-nan\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Replace string by Nan</h1>\n<p>metadata_lat_lon_df = metadata_lat_lon_df.replace('nd', np.nan)</p>\n<h1 id=\"here-we-observe-full-nana-rows-and-full-nan-columns-in-the-latest-df-we-drop-them\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#here-we-observe-full-nana-rows-and-full-nan-columns-in-the-latest-df-we-drop-them\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Here we observe full NANA rows and full NAN columns in the latest df. We drop them</h1>\n<p>selected_samples.dropna(how='all', inplace = True)\nselected_samples.dropna(how='all', axis = 1, inplace = True) </p>\n<h1 id=\"display-all-infos-of-a-df\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#display-all-infos-of-a-df\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>display all infos of a df</h1>\n<p>data_train.info(verbose=True, show_counts=True)</p>\n<h1 id=\"drop-column-according-to-regex\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#drop-column-according-to-regex\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>drop column according to regex</h1>\n<pre class=\"language-python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>regex<span class=\"token operator\">=</span><span class=\"token string\">'Test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h1 id=\"drop-columns-according-to-list\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#drop-columns-according-to-list\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>drop columns according to list</h1>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># %%</span>\ncolsToDrop <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>     <span class=\"token string\">'BARCODE'</span><span class=\"token punctuation\">,</span>            <span class=\"token string\">'PLATESET'</span><span class=\"token punctuation\">,</span>                <span class=\"token string\">'WELL'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'SUBSTANCE_NAME'</span><span class=\"token punctuation\">,</span>        <span class=\"token string\">'Full_Species'</span><span class=\"token punctuation\">,</span>               <span class=\"token string\">'Genus'</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token string\">'Sp_alone'</span><span class=\"token punctuation\">,</span>             <span class=\"token string\">'Species'</span><span class=\"token punctuation\">,</span>             <span class=\"token string\">'Famille'</span><span class=\"token punctuation\">]</span>\n\ndf_merged_selected<span class=\"token operator\">=</span>df_merged<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span>colsToDrop<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\ndf_merged_selected\n\n</code></pre>\n<h1 id=\"if-na-replace-with-value-of-the-same-row-but-another-column\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#if-na-replace-with-value-of-the-same-row-but-another-column\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>If Na replace with value of the same row but another column</h1>\n<p><a href=\"https://stackoverflow.com/a/29177664\">https://stackoverflow.com/a/29177664</a></p>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>Temp_Rating<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>Farheit<span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">del</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'Farheit'</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token string\">'File heat Observations'</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h1 id=\"extract-digits-from-a-string\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#extract-digits-from-a-string\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Extract digits from a string</h1>\n<p><a href=\"https://stackoverflow.com/a/37683738\">https://stackoverflow.com/a/37683738</a></p>\n<pre class=\"language-python\"><code class=\"language-python\">df<span class=\"token punctuation\">.</span>A<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token string\">'(\\d+)'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h1 id=\"create-multiples-columns-values-conditionally-using-npwhere\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#create-multiples-columns-values-conditionally-using-npwhere\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Create multiples columns values conditionally using np.where</h1>\n<p><a href=\"https://stackoverflow.com/a/19913845\">https://stackoverflow.com/a/19913845</a></p>\n<pre class=\"language-python\"><code class=\"language-python\">df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'Type'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ABBC'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Set'</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ZZXY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nconditions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Set'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;</span> <span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Set'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'Z'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x26;</span> <span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\nchoices <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'yellow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span>conditions<span class=\"token punctuation\">,</span> choices<span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\n\n</code></pre>\n<h1 id=\"drop-duplicates-according-to-multiple-coloumns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#drop-duplicates-according-to-multiple-coloumns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>drop duplicates according to multiple coloumns</h1>\n<p>DataFrame.drop_duplicates(subset=None, keep='first', inplace=False, ignore_index=False)\n<a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.drop_duplicates.html\">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.drop_duplicates.html</a></p>\n<p>df.drop_duplicates(subset=['a', 'b'], keep='first', inplace=True, ignore_index=False)</p>\n<h1 id=\"append-df-created-in-a-for-loop\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#append-df-created-in-a-for-loop\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>append df created in a for loop</h1>\n<p><a href=\"https://stackoverflow.com/a/28670223\">https://stackoverflow.com/a/28670223</a></p>\n<p>appended_data = []\nfor infile in glob.glob(\"*.xlsx\"):\ndata = pandas.read_excel(infile)</p>\n<pre><code># store DataFrame in list\nappended_data.append(data)\n</code></pre>\n<h1 id=\"see-pdconcat-documentation-for-more-info\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#see-pdconcat-documentation-for-more-info\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>see pd.concat documentation for more info</h1>\n<p>appended_data = pd.concat(appended_data)</p>\n<h1 id=\"write-dataframe-to-an-excel-sheet\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#write-dataframe-to-an-excel-sheet\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>write DataFrame to an excel sheet</h1>\n<p>appended_data.to_excel('appended.xlsx')</p>","noteIndex":{"id":"gvOH1py1NfW3ihejtp1nt","title":"Root","desc":"","updated":1629628449617,"created":1629628449617,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"35415410233b3af68001893c83fd0c46","links":[{"type":"wiki","from":{"fname":"root","id":"gvOH1py1NfW3ihejtp1nt","vaultName":"vault"},"value":"user.oolonek","alias":"@oolonek","position":{"start":{"line":5,"column":7,"offset":225},"end":{"line":5,"column":15,"offset":233},"indent":[]},"xvault":false,"to":{"fname":"user.oolonek"}}],"anchors":{"welcome-to-dendron":{"type":"header","text":"Welcome to Dendron","value":"welcome-to-dendron","line":7,"column":0,"depth":1}},"children":["kPtYPP8JzWBTzWz6JpnkS","3LmAI71UuDJHeWZiY9h96","TyTThFOL2RNC8FAIj5bZN","e4C8xkTTKKue3fz5ywgBH","u88hb42Nk8jvzQwtMfM3z","rInb8zzM4kEHelz4CeWDa","hUOQrqfgNFdSu7GD8fP2c","J9JmfJgjDT8Oz6WilFnKw","Iu50F9KOgYp0CDpwKBlx6","xZShWyRUMIXQaN30pKmCM","f1fsD9inrKMVapeKNhEhT","VhvHTRFNvIEee7odQvekB","D2j8S1AufMK6GbZTZ9BJz","HMvEFZAnQOxD77TnbVwGV","NYpAWkhSLKKkHIbDIbshA","0MSZusMXhweDvHD3Iggww","q5kFqQrTnytdWSux3nwOk","1PGMuBcw56lKG0Xu5sxIX","f4P2xBJLTHpQpJYiJh7BV","7KJGsaBJWOOHaHqElRaJq","BunyVngKi3As0C0CO5xhy","iRR8MxJPGIvfKl5pcOirA","3qcjidzC0tkyobYKlrWYc","uviazqrM9NUAMm9dWYVa7","7WpN3kiuBsunRJ17P3mGr","9j2pl0fgjc9tperwhyk7z9m","53WWGL5wGfRDGtBEJoqBd","EoQW6Rm5LYkkCxMgDVXHd","k7IyxWpd9nYqWlhZ96CAG","maJAMIUSNCqgSTXrQ7fu5","rrfMr3vOgkyJv21N8x99X"],"parent":null,"data":{},"body":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top. \n\nKudos @oolonek, you did great job! \nWhen using https://oolonek.github.io/dendron-ws-private/, here is what I got:\n\n<img width=\"1676\" alt=\"Capture d’écran 2021-08-22 à 13 19 54\" src=\"https://user-images.githubusercontent.com/44283913/130353241-43ba98eb-d947-473c-be08-d924f0ef585b.png\">\n\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","siteUrl":"https://oolonek.github.io","gh_edit_link":true,"gh_edit_link_text":"Click here to edit this page on Github !","gh_edit_repository":"https://github.com/oolonek/dendron-ws-public","gh_edit_branch":"main","gh_edit_view_mode":"edit","assetsPrefix":"/dendron-ws-public","usePrettyRefs":true,"siteLastModified":true,"title":"GrndStt's Dendron","description":"Personal knowledge space","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_root":"docs/","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.77.1","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true}}},"__N_SSG":true}